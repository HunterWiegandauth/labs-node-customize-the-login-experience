{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "1: Customize the login experience",
  "steps": [
    {
      "file": "README.md",
      "line": 1,
      "description": "## What you'll learn\n\n**Here's what you'll do:**\n\n* Customize the branding of your Universal Login using the Dashboard\n* Work with the Classic Login Script JavaScript\n* Explore additional Classic Login script templates\n* Customize the branding of your Universal Login using the Management API\n* Customize Sign-Up page with additional user fields"
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Customize branding using the New Login Experience",
      "description": "## Customize the branding on the login page using New experience\n\n1. #### Open your Auth0 Dashboard and ensure you're woprking in your **labs-** tenant.  \n\n1. #### Remind yourself what the current login experience looks like by clicking the profile image in the upper right hand corner and selecting **Getting Started** > **Try it out**. \n    The login page is displayed with the default color scheme and the Auth0 logo.  \n    ![login-1](./.auth0/lab/guides/images/login-1.gif)   \n\n1. #### Change the logo and colors for the login form:\n\n    1. #### In the Auth0 dashboard, navigate to **Branding** > **Universal Login** in the left-hand navigation.  \n\n    1. #### Then, if it isn’t already selected, select the **New** login experience.  \n        ![login-2](./.auth0/lab/guides/images/login-2.gif)  \n\n    1. #### Scroll down the Universal Login settings page to the **Customization** section and set these values, then click the **Save Changes** button.\n        * Company Logo: [https://openmoji.org/data/color/svg/1F984.svg](https://openmoji.org/data/color/svg/1F984.svg)\n        * Primary Color: #9933ff\n        * Page Background Color: #92d3f5   \n\n        ![login-3](./.auth0/lab/guides/images/login-3.gif)   \n\n1. #### See the changes:\n\n    1. #### Scroll up and select the **login** tab.  \n\n    1. #### Ensure that the **Customize Login Page** toggle is in the **off** position.  \n\n    1. #### If it was on, scroll to the bottom and click the **Save Changes** button.  \n\n    1. #### Return to **Getting Started**, and click **Try it out**. The login page is displayed with the new color scheme and logo. \n        Note that this may take a few moments to take effect.  \n\n        ![login-4](./.auth0/lab/guides/images/login-4.gif)   \n\n    1. #### In your browser, view the login page source:\n\n        ```\n        Chrome: Control+U / Option+Command+U  \n        Firefox: Control+U / Command+U  \n        Safari: Option+Command+U  \n        ```  \n\n    1. #### Scroll through the page source. \n        Note that this page does not load any JavaScript libraries: Everything you see in the New Universal Login experience is generated on the server.  \n\nNext, we'll explore the Classic Login's JavaScript."
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Explore the Classic Login Javascript",
      "description": "## Explore the Classic Login JavaScript\n\nAuth0's Classic Universal Login experience is built on top of Auth0's JavaScript libraries (Lock.js, auth0.js, MFA Widget, Password Reset). Compared to the New Universal Login experience, it currently offers a more complete feature set.\n\n1. #### Switch to the Classic Universal Login experience:\n    1. #### In the Dashboard, Click **Branding** > **Universal Login** in the left-hand navigation.  \n\n    1. #### If it is not already selected, select the **Classic** login experience.\n\n    1. #### Scroll to the bottom of the page and click the **Save Changes** button.\n\n    1. #### Scroll back to the top of the page and click the **Login** tab. The Classic Experience javascript tab is displayed.  \n\n    ![login-5](./.auth0/lab/guides/images/login-5.gif)   \n\n1. #### Set the  default template:\n    1. #### Set the **Customize Login Page** toggle to the **on** position (If it is not already) \n    1. #### Select **Lock** from the **Default Template** dropdown menu.\n\n    ![login-6](./.auth0/lab/guides/images/login-6.gif)   \n\n1. #### Examine the theme code:\n    1. #### Scroll down in the editor to the theme code:  \n\n        ```json\n        theme: {\n        //logo:            'YOUR LOGO HERE',\n            primaryColor:    colors.primary ? colors.primary : 'green'\n            },\n        ```\n\n        Currently, the Classic Experience login script does not load your new logo, but it will use the primary color you set in the previous section.  \n    \n    1. #### Scroll down to locate the colors.page_background code:\n        You’ll see where the background color is used if it has been previously set on the main page.  \n\n        ```js\n        if(colors.page_background) {\n        var css = '.auth0-lock.auth0-lock .auth0-lock-overlay { background: ' +\n                    colors.page_background +\n                    ' }';\n        ```\n\n    1. #### Scroll back up the page to just above the editor, and click **Preview.** \n        The Preview page is displayed. Take a look down the page to see the preview of your Classic Experience login.  \n\n        Note that the script uses the colors you set in the New Experience, but uses a default logo.  \n\n    ![login-7](./.auth0/lab/guides/images/login-7.gif)   \n\n1. #### Edit the theme code:\n    1. #### Return to the **HTML** tab, scroll down in the editor, and locate the **theme:** code again. \n    1. #### Uncomment the Logo line and add your logo URL so the theme code block now looks like this:  \n\n        ```json\n        theme: {\n            logo:       'https://openmoji.org/data/color/svg/1F984.svg',\n            primaryColor:    colors.primary ? colors.primary : 'green'\n            },\n        ```\n    1. #### Click **Save.**  \n\n    ![login-8](./.auth0/lab/guides/images/login-8.gif)   \n\n1. #### Take a look at it:\n\n    1. #### Go to the **Preview** tab. \n        Your preview contains the new logo.  \n        Note that you may need to back out and preview a few times to see the change take effect.  \n\n    1. #### This time, navigate to **Getting Started**, and click **Try it out**. \n        The Classic Experience login page is displayed.  \n\n    1. #### In your browser, view the login page source:\n\n        ```\n        Chrome: Control+U / Option+Command+U  \n        Firefox: Control+U / Command+U  \n        Safari: Option+Command+U  \n        ```\n    1. #### Scroll down the page source to the `<body>` section. \n        You should see a `<script>` tag containing embedded JavaScript. Scroll through the embedded JavaScript and it should look familiar: it is what you changed in the dashboard using the Login text editor, and you should see the theme: block containing the link to your new logo.\n\n    ![login-9](./.auth0/lab/guides/images/login-9.gif)   "
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Explore the Classic Login templates",
      "description": "## Explore the Classic Login templates\n\n1. #### Choose a different login template:\n    1. #### In the Dashboard, go to the **Branding** > **Universal Login** > **Login** tab  \n\n    1. #### Click the **Default Templates** dropdown. A list of template scripts is displayed, which contains:\n        * Lock\n        * Lock (passwordless)\n        * Custom Login Form  \n\n    1. #### Click **Lock** in the dropdown.  \n\n    1. #### Scroll down the editor to locate the **theme:** code, and note the theme: code has been reset to the default:  \n\n        ```json\n        theme: {\n        //logo:            'YOUR LOGO HERE',\n            primaryColor:    colors.primary ? colors.primary : 'green'\n            },\n        ```\n\n    1. #### Scroll back to the drop-down menu and choose **Custom Login Form.**  \n\n        The new template is loaded in the editor. \n        \n    1. #### Click **Save**.\n\n    ![login-10](./.auth0/lab/guides/images/login-10.gif)  \n\n1. #### Try it out at **Getting Started > Try it out**.  \n\n    The Custom Login Form template gives you a basic login form and does not use the logo and colors saved on the Universal Login Settings tab. This template is a starting point for your own branded login user experience.   \n\n    ![login-11](./.auth0/lab/guides/images/login-11.gif)  \n\n1. #### Return to the **Branding** > **Universal Login** > **Login** tab and **disable** the Classic Login experience by clicking on the **Customize Login Page** toggle switch.  \n\n    Nice work -- The default experience has been reinstated.\n\n    ![login-12](./.auth0/lab/guides/images/login-12.gif)  "
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Change branding using the Management API",
      "description": "## Change branding using the Management API\n\nThere are other branding changes you can make to your tenant by using the Management API. In this exercise, you’ll use the Management API Explorer to add a custom web font to your login page, as well as change the colors and the logo, all in one API call.  \n\n1. #### If you did not complete the **Working with User Profiles** lab, you'll need to set up the Auth0 Management API and API Explorer Application, otherwise, if it is already set up, you can skip this step.\n    1. #### In the Dashboard, go to the **Applications** > **APIs**. In your list of APIs, Click on **Auth0 Management API**. The Settings page for the _Auth0 Management API_ is displayed.  \n\n    1. #### Click on the **API Explorer** tab.  \n\n    1. #### Click the **Copy Token** icon on the right of your Access Token.  \n\n    1. #### Click the **Docs** link at the top of your Dashboard, and click Management API from the dropdown list. The Management API explorer is opened in a new browser tab.  \n\n    1. #### Click **Set API Token** in the top left corner of the page. In the popup, **paste** your token into the **API Token** field, and click **Set Token**.  \n\n        The Management API Explorer now shows the _Domain, API Token,_ and _Allowed Scopes_ for your tenant.  \n\n1. #### Get branding settings:\n    1. #### On the API Explorer page (with your token already set), scroll down the left-hand navigation and locate **Branding**. Click Branding to reveal its available methods _Get branding settings_ and _Update branding settings._\n\n    ![login-13](./.auth0/lab/guides/images/login-13.gif)  \n\n    1. #### Select **Get branding settings** in the left-hand navigation <https://auth0.com/docs/api/management/v2#!/Branding/get_branding>\n        and review the documentation for the `GET` call to `/api/v2/branding`.  \n\n        On the right-hand side, under _Response Sample_ you see the schema for the JSON response you will receive upon successful completion.   \n\n    ![login-14](./.auth0/lab/guides/images/login-14.gif)   \n\n    1. #### Click **Try**. The result of the GET /api/v2/branding call is displayed and if you get a 200 response code, and the body contains the current branding configuration that will look similar to this:  \n\n        ```json\n            {\n            \"colors\": {\n                \"page_background\": \"#92d3f5\",\n                \"primary\": \"#9933ff\"\n            },\n            \"logo_url\": \"https://openmoji.org/data/color/svg/1F984.svg\"\n            }\n        ```     \n    ![login-15](./.auth0/lab/guides/images/login-15.gif)   \n\n1. #### Update the branding settings:\n\n    1. #### Now, dismiss the modal dialog and select **Update Branding settings** in the left-hand navigation  \n        (https://auth0.com/docs/api/management/v2#!/Branding/patch\\_branding) and review the documentation for the PATCH call to /api/v2/branding.  \n\n    1. #### Copy these new settings and paste them into the **body** field:  \n\n        ```json\n        {\n        \"colors\": {\n            \"primary\": \"#B499C8\",\n            \"page_background\": \"#E9AD56\"\n        },\n        \"logo_url\": \"https://openmoji.org/data/color/svg/1F490.svg\",\n        \"font\": {\n            \"url\": \"https://fonts.gstatic.com/s/tangerine/v12/Iurd6Y5j_oScZZow4VO5srNZi5FNym499g.woff2\"\n        }\n        }\n        ```\n\n    1. #### Click **Try**. \n        The result of the PATCH /api/v2/branding call is displayed and if you get a 200 response code, the body will look similar to this:  \n\n        ```json\n        {\n        \"colors\": {\n            \"page_background\": \"#E9AD56\",\n            \"primary\": \"#B499C8\"\n        },\n        \"font\": {\n            \"Url\": \"https://fonts.gstatic.com/s/tangerine/v12/Iurd6Y5j_oScZZow4VO5srNZi5FNym499g.woff2\"\n        },\n        \"logo_url\": \"https://openmoji.org/data/color/svg/1F490.svg\"\n        }\n        ```\n    ![login-16](./.auth0/lab/guides/images/login-16.gif)   \n\n    1. #### To test the branding changes, dismiss the modal dialog and switch back to the Auth0 dashboard. Then, use the **Try It Out** link (click the profile image in the upper right hand corner > Getting started > Try it out). \n        New colors, icon, and font are applied to your login screen.  \n\n    ![login-17](./.auth0/lab/guides/images/login-17.gif)   \n\n1. #### Revert to the previous branding:\n    1. #### TO revert, use the PATCH /api/v2/branding call ([https://auth0.com/docs/api/management/v2#!/Branding/patch_branding](https://auth0.com/docs/api/management/v2#!/Branding/patch_branding)):  \n        Copy these new settings in the Management API window and paste them into the body field:  \n\n        ```json\n        {\n        \"colors\": {\n            \"primary\": \"#9933ff\",\n            \"page_background\": \"#92d3f5\"\n        },\n        \"logo_url\": \"https://openmoji.org/data/color/svg/1F984.svg\",\n        \"font\": null\n        }\n        ```\n\n    1. #### Click **Try**. The result of the `PATCH /api/v2/branding` call is displayed and if you get a 200 response code, the body will look similar to this:  \n\n        ```json\n        {\n        \"colors\": {\n            \"page_background\": \"#92d3f5\",\n            \"primary\": \"#ea5a47\"\n        },\n        \"logo_url\": \"https://openmoji.org/data/color/svg/1F984.svg\"\n        }\n        ```\n\n    1. #### Test the change with the **Try it out** link. \n        The colors and icon have reverted to the previous design, and the font now uses the Auth0 default.\n\n    ![login-18](./.auth0/lab/guides/images/login-18.gif)   "
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Customize the Sign-Up page with additional user fields",
      "description": "## Customize the Sign-Up page with additional user fields\n\nThis exercise builds upon what you have learned about **users** in Auth0. If you have not completed the _Users in Auth0_ module and lab, take a look at it before you complete this section, to familiarize yourself with Auth0 Users.\n\nPreviously, you learned how to update user profile information using the Management API, but there is a simpler way to capture the information you need upfront when a user signs up. In this last exercise, let’s add custom fields to the **Sign Up** dialog in **Universal Login**.\n\n1. #### Navigate to the login page customization settings:\n    1. #### Ensure that you're in your **labs-** tenant.  \n\n    1. #### In the left-hand navigation, click **Branding** > **Universal Login**.  \n\n        You should see the **Universal Login Settings** displayed. Currently, by default, the **Classic** option will be selected in the **Experience** section of the **Settings** tab.  \n\n    1. #### Click the **Login** tab located at the top of the display area of the **Universal Login** page.  \n\n        You will see the **Login Page** customization settings. By default customizations are disabled and the standard dialogs are used.   \n\n    ![login-19](./.auth0/lab/guides/images/login-19.gif)  \n\n1. #### Edit the code to add custom fields:\n\n    1. #### Toggle the **Customize Login Page** toggle switch to enable and select **Lock** from the DEFAULT TEMPLATES drop-down menu.  \n\n        The **HTML** editor will become available and you can easily make changes right in the Dashboard.  \n\n    1. #### In the **HTML** editor, scroll to the section where the **Auth0Lock** object is created. It will be near line 39.  \n\n        ```js\n        var lock = new Auth0Lock(config.clientID, config.auth0Domain, {\n        // many, many configuration values are set here.\n        });\n        ```\n\n        This JavaScript code creates an instance of Auth0’s Lock SDK. The first two parameters are configuration values for your tenant and client and are passed in at runtime. A third parameter is a configuration object. For the purposes of this exercise, we will be making edits to this configuration.  \n\n    1. #### Add the following code to the top of the configuration object.  \n\n        ```js\n        var lock = new Auth0Lock(config.clientID, config.auth0Domain, {\n        // add code here \n        additionalSignUpFields: [\n            // specify additional fields here\n        ],\n        // maintain all the code below this line\n        auth: { … },\n        });\n        ```\n\n        It should look like this:  \n\n        ![](https://cdn.auth0.com/website/training/example/A0FUN-M05-L01/img-3.png)  \n\n        Here we are adding a new property to the Lock configuration called **additionalSignUpFields**. It is an Array that contains a JSON object for each field you want to add to the Sign-Up form.  \n\n        In the previous exercise, we have added both a _band_ and _instrument_ property to the **user\\_metadata** object after the user has created their account. Let’s add two additional signup fields to capture this data upfront at registration.  \n\n    1. #### Add the following code to the additionalSignUpFields array.  \n\n        ```js\n        var lock = new Auth0Lock(config.clientID, config.auth0Domain, {\n        // add code here \n        additionalSignUpFields: [\n            { name: 'band', placeholder: 'What band are you in?' },\n            { name: 'instrument', placeholder: 'What instrument do you play?' }\n        ],\n        // maintain all the code below this line\n        auth: { … },\n        });\n        ```\n\n        It should look like this:  \n\n        ![](https://cdn.auth0.com/website/training/example/A0FUN-M05-L01/img-2.png)  \n\n        Here you have added two fields; one named band and another named instrument. You have also added placeholder values to give a hint to the registering user of what to add to these fields.  \n\n    1. #### Scroll to the bottom of the page and click the **Save Changes** button.  \n\n    ![login-20](./.auth0/lab/guides/images/login-20.gif)   \n\n1. #### Test it on on the **Lab: Web App**:\n    1. #### Click [here](command:workbench.action.debug.start) to run the Web App in debug mode. \n        It may take a few minutes for the app to deploy.\n    1. #### Once the app has deployed, click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open it in your web browser.\n    1. #### On your Web App's landing page, click **login**.  \n    1. #### Then, click the **Sign-Up** tab at the top of the dialog.  \n        You should see the two additional fields added to the bottom of the Sign Up form.  \n    1. #### Fill in the form to create a new user account in your tenant.  \n        *You will need to supply a different email address from the one used to create your first user account. In this case, it is OK to use a made-up email address you do not have access to.*\n    1. #### Click the **SIGN UP** button at the bottom of the dialog.   \n\n    ![login-21](./.auth0/lab/guides/images/login-21.gif)   \n\n1. #### See the results in the Auth0 dashboard:\n    1. #### Return to the Auth0 Dashboard.  \n    1. #### Navigate to the **Users** list view located under the **User Management** section of the left-hand navigation menu.  \n    1. #### Locate your new user and click the entry to view the user’s details.  \n    1. #### Scroll down to the **Metadata** section on the **Details** tab.  \n\n        You should see the values for _band_ and _instrument_ properties populated with values from the Sign Up form in the **user_metadata** section. Of course, these values are not available to you directly in the id token returned by OIDC authentication but we will cover how to add them in a later lab using Rules.  \n\n        There is a way to store values that can be immediately accessed in an OIDC based id token. As mentioned previously, OIDC has a set of [standard claims](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) defined in the specification. Let’s use them to capture the user's first and last name at registration.  \n    \n    ![login-22](./.auth0/lab/guides/images/login-22.gif)   \n\n1. #### Add some new fields:\n    1. #### Return to the **Universal Login**’s **Login Page HTML** editor.  \n    1. #### Update the additionalSignUpFields array to contain these two new fields.  \n\n        ```js\n        var lock = new Auth0Lock(config.clientID, config.auth0Domain, {\n        // add code here \n        additionalSignUpFields: [\n            { name: 'given_name', placeholder: 'First Name', storage: 'root' },\n            { name: 'family_name', placeholder: 'Last Name', storage: 'root' },\n            { name: 'band', placeholder: 'What band are you in?' },\n            { name: 'instrument', placeholder: 'What instrument do you play?' }\n        ],\n        // maintain all the code below this line\n        auth: { … },\n        });\n        ```\n\n        It'll look like this:  \n\n        ![](https://cdn.auth0.com/website/training/example/A0FUN-M05-L01/img-1.png)  \n\n        Here you have added two new fields named **given_name** and **family_name** respectively. Note these are the exact names specified by the OIDC standard claims.  \n\n    1. #### Scroll to the bottom of the page and click the **Save Changes** button.  \n\n    ![login-23](./.auth0/lab/guides/images/login-23.gif)   \n\n1. #### Try it out:\n    1. #### If it isn't open already, click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open your **Lab: Web App** in a new window.  \n    1. #### Ensure that you've logged out, then click the **Login** link.\n    1. #### Click the **Sign-Up** tab at the top of the dialog.  \n        You should see the two additional fields added to the bottom of the Sign Up form.  \n    1. #### Fill in the form to create a new user account in your tenant.  \n        You will need to supply another new email address, different from the one used to create your first user account. It is OK to use a made-up email address you do not have access to.  \n    1. #### Click the **SIGN UP** button at the bottom of the dialog.  \n\n    ![login-24](./.auth0/lab/guides/images/login-24.gif)   \n\n1. #### See the results:\n    1. #### Return to the Auth0 dashboard.  \n    1. #### Navigate to the **Users** list view located under the **User Management** section of the left-hand navigation menu.  \n    1. #### Locate your new user and click the entry to view the user’s details.  \n    1. #### Scroll down to the **Identity Provider Attributes** section on the **Details** tab.  \n\n        You should see the values for _family_name_and_given_name_ properties populated with values from the Sign Up form in this section. These values can be immediately accessed in an OIDC based id token as they are [standard claims](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) defined in the OIDC specification.  \n\n    ![login-25](./.auth0/lab/guides/images/login-25.gif)   \n\n    #### Congratulations -- You’ve successfully added fields to the login form!"
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Recap",
      "description": "\n**In this lab you:**\n\n*   Customized the branding of your Universal Login using the Dashboard.\n*   Worked with the Classic Login Script JavaScript to define your branding.\n*   Explored additional Classic Login script templates to review additional login customization opportunities.\n*   Retrieved the current branding configuration using the Management API explorer.\n*   Customized the branding of your Universal Login using the Management API explorer.\n*   Customized the Sign-Up page to capture additional user fields."
    }
  ]
}
