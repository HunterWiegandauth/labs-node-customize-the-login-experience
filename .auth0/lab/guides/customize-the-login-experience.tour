{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "1: Customize the login experience",
  "steps": [
    {
      "file": "README.md",
      "line": 1,
      "description": "## What you'll learn\n\n* Customize the branding of your Universal Login using the Dashboard\n* Work with the Classic Login Script JavaScript\n* Explore additional Classic Login script templates\n* Customize the branding of your Universal Login using the Management API\n* Customize Sign-Up page with additional user fields"
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Customize branding using the New Login Experience",
      "description": "## Customize the branding on the login page using New experience\n\n1. #### Open your Auth0 Dashboard. \n    **IMPORTANT:** Ensure you're working in your _labs-_ tenant.\n\n1. #### Remind yourself what the current login experience looks like by clicking the profile image in the upper right hand corner and selecting _Getting Started_ > _Try it out_. \n    The login page is displayed with the default color scheme and the Auth0 logo.  \n    ![View the current login experience](https://cdn.auth0.com/website/a0fun/v2/login-1.gif)   \n\n1. #### Change the logo and colors for the login form:\n\n    1. #### In the Auth0 dashboard, navigate to _Branding_ > _Universal Login_ in the left-hand navigation.  \n\n    1. #### Then, if it isn’t already selected, select the _New_ login experience.  \n        ![select the new universal login experience](https://cdn.auth0.com/website/a0fun/v2/login-2.gif)  \n\n    1. #### Scroll down the Universal Login settings page to the _Customization_ section and set these values, then click the _Save Changes_ button.\n        * Company Logo: [https://openmoji.org/data/color/svg/1F984.svg](https://openmoji.org/data/color/svg/1F984.svg)\n        * Primary Color: #9933ff\n        * Page Background Color: #92d3f5   \n\n        ![set the customization values](https://cdn.auth0.com/website/a0fun/v2/login-3.gif)   \n\n1. #### See the changes:\n\n    1. #### Scroll up and select the _login_ tab.  \n\n    1. #### Ensure that the _Customize Login Page_ toggle is in the _off_ position.  \n\n    1. #### If it was on, scroll to the bottom and click the _Save Changes_ button.  \n\n    1. #### Return to _Getting Started_, and click _Try it out_. The login page is displayed with the new color scheme and logo. \n        Note that this may take a few moments to take effect.  \n\n        ![view the login experience](https://cdn.auth0.com/website/a0fun/v2/login-4.gif)   \n\n    1. #### In your browser, view the login page source:\n\n        ```\n        Chrome: Control+U / Option+Command+U  \n        Firefox: Control+U / Command+U  \n        Safari: Option+Command+U  \n        ```  \n\n    1. #### Scroll through the page source. \n        Note that this page does not load any JavaScript libraries: Everything you see in the New Universal Login experience is generated on the server.  \n\nNext, we'll explore the Classic Login's JavaScript."
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Explore the Classic Login Javascript",
      "description": "## Explore the Classic Login JavaScript\n\nAuth0's Classic Universal Login experience is built on top of Auth0's JavaScript libraries (Lock.js, auth0.js, MFA Widget, Password Reset). Compared to the New Universal Login experience, it currently offers a more complete feature set.\n\n1. #### Switch to the Classic Universal Login experience:\n    1. #### In the Dashboard, Click _Branding_ > _Universal Login_ in the left-hand navigation.  \n\n    1. #### If it is not already selected, select the _Classic_ login experience.\n\n    1. #### Scroll to the bottom of the page and click the _Save Changes_ button.\n\n    1. #### Scroll back to the top of the page and click the _Login_ tab. The Classic Experience javascript tab is displayed.  \n\n    ![switch to the classic login experience](https://cdn.auth0.com/website/a0fun/v2/login-5.gif)   \n\n1. #### Set the  default template:\n    1. #### Set the _Customize Login Page_ toggle to the _on_ position (If it is not already) \n    1. #### Select _Lock_ from the _Default Templates_ dropdown menu.\n        Note that selecting the default template resets all code changes.\n\n    ![set the default template](https://cdn.auth0.com/website/a0fun/v2/login-6.gif)   \n\n1. #### Examine the theme code:\n    1. #### Scroll down in the editor to the theme code:  \n\n        ```jsx\n        theme: {\n        //logo: 'YOUR LOGO HERE',\n            primaryColor: colors.primary ? colors.primary : 'green'\n            },\n        ```\n\n        Currently, the Classic Experience login script does not load your new logo, but it will use the primary color you set in the previous section.  \n    \n    1. #### Scroll down to locate the colors.page_background code:\n        You’ll see where the background color is used if it has been previously set on the main page.  \n\n        ```js\n        if(colors.page_background) {\n        var css = '.auth0-lock.auth0-lock .auth0-lock-overlay { background: ' +\n                    colors.page_background +\n                    ' }';\n        ```\n\n    1. #### Scroll back up the page to just above the editor, and click _Preview._ \n        The Preview page is displayed. Take a look down the page to see the preview of your Classic Experience login.  \n\n        Note that the script uses the colors you set in the New Experience, but uses a default logo.  \n\n    ![preview the classic experience](https://cdn.auth0.com/website/a0fun/v2/login-7.gif)   \n\n1. #### Edit the theme code:\n    1. #### Return to the _HTML_ tab, scroll down in the editor, and locate the _theme:_ code again. \n    1. #### Uncomment the Logo line and add your logo URL so the theme code block now looks like this:  \n\n        ```jsx\n        theme: {\n            logo: 'https://openmoji.org/data/color/svg/1F984.svg',\n            primaryColor: colors.primary ? colors.primary : 'green'\n            },\n        ```\n    1. #### Click _Save._  \n\n    ![edit and save the theme code](https://cdn.auth0.com/website/a0fun/v2/login-8.gif)   \n\n1. #### Take a look at it:\n\n    1. #### Go to the _Preview_ tab.  \n        **IMPORTANT:** You mayt need to back out a few times in order for this change to take effect. To do so, navigate to Branding > Universal Login > the code editor. \n\n        Once the change take effect your preview will display the new logo.   \n\n    1. #### Now, navigate to _Getting Started_, and click _Try it out_. \n        The Classic Experience login page is displayed.  \n\n    1. #### In your browser, view the login page source:\n\n        ```\n        Chrome: Control+U / Option+Command+U  \n        Firefox: Control+U / Command+U  \n        Safari: Option+Command+U  \n        ```\n    1. #### Scroll down the page source to the `<body>` section. \n        You should see a `<script>` tag containing embedded JavaScript. Scroll through the embedded JavaScript and it should look familiar: it is what you changed in the dashboard using the Login text editor, and you should see the theme: block containing the link to your new logo.\n\n    ![view the code in the browser](https://cdn.auth0.com/website/a0fun/v2/login-9.gif)  "
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Explore the Classic Login templates",
      "description": "## Explore the Classic Login templates\n\n1. #### Choose a different login template:\n    1. #### In the Dashboard, go to the _Branding_ > _Universal Login_ > _Login_ tab  \n\n    1. #### Click the _Default Templates_ dropdown. A list of template scripts is displayed, which contains:\n        * Lock\n        * Lock (passwordless)\n        * Custom Login Form  \n\n    1. #### Click _Lock_ in the dropdown.  \n\n    1. #### Scroll down the editor to locate the _theme:_ code, and note the theme: code has been reset to the default:  \n\n        ```json\n        theme: {\n        //logo:            'YOUR LOGO HERE',\n            primaryColor:    colors.primary ? colors.primary : 'green'\n            },\n        ```\n\n    1. #### Scroll back to the drop-down menu and choose _Custom Login Form._  \n\n        The new template is loaded in the editor. \n        \n    1. #### Click _Save_.\n\n    ![select the custom login form](https://cdn.auth0.com/website/a0fun/v2/login-10.gif)  \n\n1. #### Try it out at _Getting Started > Try it out_.  \n\n    The Custom Login Form template gives you a basic login form and does not use the logo and colors saved on the Universal Login Settings tab. This template is a starting point for your own branded login user experience.   \n\n    ![preview the login experience](https://cdn.auth0.com/website/a0fun/v2/login-11.gif)  \n\n1. #### Return to the _Branding_ > _Universal Login_ > _Login_ tab and _disable_ the Classic Login experience by clicking on the _Customize Login Page_ toggle switch.  \n\n    Nice work -- The default experience has been reinstated.\n\n    ![reinstate the default login experience](https://cdn.auth0.com/website/a0fun/v2/login-12.gif)  "
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Change branding using the Management API",
      "description": "## Change branding using the Management API\n\nThere are other branding changes you can make to your tenant by using the Management API. In this exercise, you’ll use the Management API Explorer to add a custom web font to your login page, as well as change the colors and the logo, all in one API call.  \n\n1. #### If you did not complete the _Working with User Profiles_ lab, you'll need to set up the Auth0 Management API and API Explorer Application, otherwise, if it is already set up, you can skip this step.\n    1. #### In the Dashboard, go to the _Applications_ > _APIs_. In your list of APIs, Click on _Auth0 Management API_. The Settings page for the _Auth0 Management API_ is displayed.  \n\n    1. #### Click on the _API Explorer_ tab.  \n\n    1. #### Click the _Copy Token_ icon on the right of your Access Token.  \n\n    1. #### Click the _Docs_ link at the top of your Dashboard, and click Management API from the dropdown list. The Management API explorer is opened in a new browser tab.  \n\n    1. #### Click _Set API Token_ in the top left corner of the page. In the popup, _paste_ your token into the _API Token_ field, and click _Set Token_.  \n\n        The Management API Explorer now shows the _Domain, API Token,_ and _Allowed Scopes_ for your tenant.  \n\n1. #### Get branding settings:\n    1. #### On the API Explorer page (with your token already set), scroll down the left-hand navigation and locate _Branding_. Click Branding to reveal its available methods _Get branding settings_ and _Update branding settings._\n\n    ![locate the branding settings](https://cdn.auth0.com/website/a0fun/v2/login-13.gif)  \n\n    1. #### Select _Get branding settings_ in the left-hand navigation <https://auth0.com/docs/api/management/v2#!/Branding/get_branding>\n        and review the documentation for the `GET` call to `/api/v2/branding`.  \n\n        On the right-hand side, under _Response Sample_ you see the schema for the JSON response you will receive upon successful completion.   \n\n    ![review the branding documentation](https://cdn.auth0.com/website/a0fun/v2/login-14.gif)   \n\n    1. #### Click _Try_. The result of the GET /api/v2/branding call is displayed and if you get a 200 response code, and the body contains the current branding configuration that will look similar to this:  \n\n        ```json\n            {\n                \"colors\": {\n                    \"page_background\": \"#92d3f5\",\n                    \"primary\": \"#9933ff\"\n                },\n                \"logo_url\": \"https://openmoji.org/data/color/svg/1F984.svg\"\n            }\n        ```     \n    ![perform the call](https://cdn.auth0.com/website/a0fun/v2/login-15.gif)   \n\n1. #### Update the branding settings:\n\n    1. #### Now, dismiss the modal dialog and select _Update Branding settings_ in the left-hand navigation  \n        (https://auth0.com/docs/api/management/v2#!/Branding/patch\\_branding) and review the documentation for the PATCH call to /api/v2/branding.  \n\n    1. #### Copy these new settings and paste them into the _body_ field:  \n\n        ```json\n        {\n         \"colors\": {\n                   \"primary\": \"#B499C8\",\n                   \"page_background\": \"#E9AD56\"\n                   },\n         \"logo_url\": \"https://openmoji.org/data/color/svg/1F490.svg\",\n         \"font\": {\n                 \"url\": \"https://fonts.gstatic.com/s/tangerine/v12/Iurd6Y5j_oScZZow4VO5srNZi5FNym499g.woff2\"\n                 }\n        }\n        ```\n\n    1. #### Click _Try_. \n        The result of the PATCH /api/v2/branding call is displayed and if you get a 200 response code, the body will look similar to this:  \n\n        ```json\n        {\n        \"colors\": {\n            \"page_background\": \"#E9AD56\",\n            \"primary\": \"#B499C8\"\n        },\n        \"font\": {\n            \"url\": \"https://fonts.gstatic.com/s/tangerine/v12/Iurd6Y5j_oScZZow4VO5srNZi5FNym499g.woff2\"\n        },\n        \"logo_url\": \"https://openmoji.org/data/color/svg/1F490.svg\"\n        }\n        ```\n    ![update the branding with a call](https://cdn.auth0.com/website/a0fun/v2/login-16.gif)   \n\n    1. #### To test the branding changes, dismiss the modal dialog and switch back to the Auth0 dashboard. Then, use the _Try It Out_ link (click the profile image in the upper right hand corner > Getting started > Try it out). \n        New colors, icon, and font are applied to your login screen.  \n\n    ![preview the branding changes](https://cdn.auth0.com/website/a0fun/v2/login-17.gif)   \n\n1. #### Revert to the previous branding:\n    1. #### To revert, use the PATCH /api/v2/branding call ([https://auth0.com/docs/api/management/v2#!/Branding/patch_branding](https://auth0.com/docs/api/management/v2#!/Branding/patch_branding)):  \n        Copy these new settings in the Management API window and paste them into the body field:  \n\n        ```json\n        {\n        \"colors\": {\n            \"primary\": \"#9933ff\",\n            \"page_background\": \"#92d3f5\"\n        },\n        \"logo_url\": \"https://openmoji.org/data/color/svg/1F984.svg\",\n        \"font\": null\n        }\n        ```\n\n    1. #### Click _Try_. The result of the `PATCH /api/v2/branding` call is displayed and if you get a 200 response code, the body will look similar to this:  \n\n        ```json\n        {\n        \"colors\": {\n            \"page_background\": \"#92d3f5\",\n            \"primary\": \"#ea5a47\"\n        },\n        \"logo_url\": \"https://openmoji.org/data/color/svg/1F984.svg\"\n        }\n        ```\n\n    1. #### Test the change with the _Try it out_ link. \n        The colors and icon have reverted to the previous design, and the font now uses the Auth0 default.\n\n    ![change and view once more](https://cdn.auth0.com/website/a0fun/v2/login-18.gif)   "
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Customize the Sign-Up page with additional user fields",
      "description": "## Customize the Sign-Up page with additional user fields\n\nIn this exercise, you'll learn how to add custom fields to the _Sign Up_ dialog in _Universal Login_. This is useful for collecting data from users. To learn more about the user profile, check out the _Working with the User Profile_ lab.\n\n1. #### Navigate to the login page customization settings:\n    1. #### Ensure that you're in your _labs-_ tenant.  \n\n    1. #### In the left-hand navigation, click _Branding_ > _Universal Login_.  \n\n        You should see the _Universal Login Settings_ displayed. Currently, by default, the _Classic_ option will be selected in the _Experience_ section of the _Settings_ tab.  \n\n    1. #### Click the _Login_ tab located at the top of the display area of the _Universal Login_ page.  \n\n        You will see the _Login Page_ customization settings. By default customizations are disabled and the standard dialogs are used.   \n\n    ![naviagte to the universal login page](https://cdn.auth0.com/website/a0fun/v2/login-19.gif)  \n\n1. #### Edit the code to add custom fields:\n\n    1. #### Toggle the _Customize Login Page_ toggle switch to enable and select _Lock_ from the DEFAULT TEMPLATES drop-down menu.  \n\n        The _HTML_ editor will become available and you can easily make changes right in the Dashboard.  \n\n    1. #### In the _HTML_ editor, scroll to the section where the _Auth0Lock_ object is created. It will be near line 39.  \n\n        ```js\n        var lock = new Auth0Lock(config.clientID, config.auth0Domain, {\n        // many, many configuration values are set here.\n        });\n        ```\n\n        This JavaScript code creates an instance of Auth0’s Lock SDK. The first two parameters are configuration values for your tenant and client and are passed in at runtime. A third parameter is a configuration object. For the purposes of this exercise, we will be making edits to this configuration.  \n\n    1. #### Add the following code to the top of the configuration object.  \n\n        ```js\n        var lock = new Auth0Lock(config.clientID, config.auth0Domain, {\n        // add code here \n        additionalSignUpFields: [\n            // specify additional fields here\n        ],\n        // maintain all the code below this line\n        auth: { … },\n        });\n        ```\n\n        It should look like this:  \n\n        ![](https://cdn.auth0.com/website/training/example/A0FUN-M05-L01/img-3.png)  \n\n        Here we are adding a new property to the Lock configuration called _additionalSignUpFields_. It is an Array that contains a JSON object for each field you want to add to the Sign-Up form.  \n\n        If you've completed the **Working with the User Profile Lab**, you'll recall that we added both a _band_ and _instrument_ property to the _user\\_metadata_ object after the user has created their account. Let’s add two additional signup fields to capture this data upfront at registration.  \n\n    1. #### Add the following code to the additionalSignUpFields array.  \n\n        ```js\n        var lock = new Auth0Lock(config.clientID, config.auth0Domain, {\n        // add code here \n        additionalSignUpFields: [\n            { name: 'band', placeholder: 'What band are you in?' },\n            { name: 'instrument', placeholder: 'What instrument do you play?' }\n        ],\n        // maintain all the code below this line\n        auth: { … },\n        });\n        ```\n\n        It should look like this:  \n\n        ![](https://cdn.auth0.com/website/training/example/A0FUN-M05-L01/img-2.png)  \n\n        Here you have added two fields; one named band and another named instrument. You have also added placeholder values to give a hint to the registering user of what to add to these fields.  \n\n    1. #### Scroll to the bottom of the page and click the _Save Changes_ button.  \n\n    ![save the changes](https://cdn.auth0.com/website/a0fun/v2/login-20.gif)   \n\n1. #### Test it on on the _Lab: Web App_:\n    1. #### Click [here](command:workbench.action.debug.start) to run the Web App in debug mode. \n        It may take a few minutes for the app to deploy.\n    1. #### Once the app has deployed, click the \"Open in Browser\" button on the VS Code popup. Or, click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open it in your web browser.\n    1. #### On your Web App's landing page, click _login_.  \n    1. #### Then, click the _Sign-Up_ tab at the top of the dialog.  \n        You should see the two additional fields added to the bottom of the Sign Up form.  \n    1. #### Fill in the form to create a new user account in your tenant.  \n        *You will need to supply a different email address from the one used to create your first user account. In this case, it is OK to use a made-up email address you do not have access to.*\n    1. #### Click the _SIGN UP_ button at the bottom of the dialog.   \n\n    ![test it out](https://cdn.auth0.com/website/a0fun/v2/login-21.gif)   \n\n1. #### See the results in the Auth0 dashboard:\n    1. #### Return to the Auth0 Dashboard.  \n    1. #### Navigate to the _Users_ list view located under the _User Management_ section of the left-hand navigation menu.  \n    1. #### Locate your new user and click the entry to view the user’s details.  \n    1. #### Scroll down to the _Metadata_ section on the _Details_ tab.  \n\n        You should see the values for _band_ and _instrument_ properties populated with values from the Sign Up form in the _user_metadata_ section. Of course, these values are not available to you directly in the id token returned by OIDC authentication but we will cover how to add them in a later lab using Rules.  \n\n        There is a way to store values that can be immediately accessed in an OIDC based id token. As mentioned previously, OIDC has a set of [standard claims](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) defined in the specification. Let’s use them to capture the user's first and last name at registration.  \n    \n    ![view the results in the dashboard](https://cdn.auth0.com/website/a0fun/v2/login-22.gif)   \n\n1. #### Add some new fields:\n    1. #### Return to the _Universal Login_’s _Login Page HTML_ editor.  \n    1. #### Update the additionalSignUpFields array to contain these two new fields.  \n\n        ```js\n        var lock = new Auth0Lock(config.clientID, config.auth0Domain, {\n        // add code here \n        additionalSignUpFields: [\n            { name: 'given_name', placeholder: 'First Name', storage: 'root' },\n            { name: 'family_name', placeholder: 'Last Name', storage: 'root' },\n            { name: 'band', placeholder: 'What band are you in?' },\n            { name: 'instrument', placeholder: 'What instrument do you play?' }\n        ],\n        // maintain all the code below this line\n        auth: { … },\n        });\n        ```\n\n        It'll look like this:  \n\n        ![](https://cdn.auth0.com/website/training/example/A0FUN-M05-L01/img-1.png)  \n\n        Here you have added two new fields named _given_name_ and _family_name_ respectively. Note these are the exact names specified by the OIDC standard claims.  \n\n    1. #### Scroll to the bottom of the page and click the _Save Changes_ button.  \n\n    ![save these changes](https://cdn.auth0.com/website/a0fun/v2/login-23.gif)   \n\n1. #### Try it out:\n    1. #### If it isn't open already, click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open your _Lab: Web App_ in a new window.  \n    1. #### Ensure that you've logged out, then click the _Login_ link.\n    1. #### Click the _Sign-Up_ tab at the top of the dialog.  \n        You should see the two additional fields added to the bottom of the Sign Up form.  \n    1. #### Fill in the form to create a new user account in your tenant.  \n        You will need to supply another new email address, different from the one used to create your first user account. It is OK to use a made-up email address you do not have access to.  \n    1. #### Click the _SIGN UP_ button at the bottom of the dialog.  \n\n    ![give it a try](https://cdn.auth0.com/website/a0fun/v2/login-24.gif)   \n\n1. #### See the results:\n    1. #### Return to the Auth0 dashboard.  \n    1. #### Navigate to the _Users_ list view located under the _User Management_ section of the left-hand navigation menu.  \n    1. #### Locate your new user and click the entry to view the user’s details.  \n    1. #### Scroll down to the _Identity Provider Attributes_ section on the _Details_ tab.  \n\n        You should see the values for _family_name_and_given_name_ properties populated with values from the Sign Up form in this section. These values can be immediately accessed in an OIDC based id token as they are [standard claims](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims) defined in the OIDC specification.  \n\n    ![view the results](https://cdn.auth0.com/website/a0fun/v2/login-25.gif)   \n\n    #### Congratulations -- You’ve successfully added fields to the login form!"
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Recap",
      "description": "\n**In this lab you:**\n\n*   Customized the branding of your Universal Login using the Dashboard.\n*   Worked with the Classic Login Script JavaScript to define your branding.\n*   Explored additional Classic Login script templates to review additional login customization opportunities.\n*   Retrieved the current branding configuration using the Management API explorer.\n*   Customized the branding of your Universal Login using the Management API explorer.\n*   Customized the Sign-Up page to capture additional user fields."
    }
  ]
}